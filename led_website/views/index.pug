html
    head
        title= "PixieColor"
        head
            title= "PixieColor"
            link(rel="preconnect" href="https://fonts.gstatic.com")
            link(href="https://fonts.googleapis.com/css2?family=Roboto+Condensed:ital,wght@0,700;1,400&display=swap" rel="stylesheet")

    body
        div.container
            before
            p.moto LIVING ROOM LED
            after
        block content
            form.forma(method='POST' action='/things/' + thing_id + "/color" + "?_method=PUT")
                div.form-group
                    section#s_color_picker_id
                        canvas#color_picker(width=200, height=200)
                    div.colorchange
                        input#s_color.form-control(name='color', value=color)
                        button.color-btn.btn.btn-primary(type='submit') Change color
            if timer_locked
                form.forma(method='POST' action='/things/' + thing_id + "/timer" + "?_method=DELETE")
                    button.color-btn.btn.btn-primary(type='submit') Cancel
            else
                div#timers
                    form.forma(method='POST' action='/things/' + thing_id + "/timer")
                        button.timer.btn.btn-primary(type='submit', name ='time', value=3000) 5
                    form.forma(method='POST' action='/things/' + thing_id + "/timer")
                        button.timer.btn.btn-primary(type='submit', name ='time', value=3000) 15
                    form.forma(method='POST' action='/things/' + thing_id + "/timer")
                        button.timer.btn.btn-primary(type='submit', name ='time', value=3000) 30
            input#switch(type="checkbox")
            label(for="switch")
            //div.colorchange
            //    form.forma(method='POST' action='/things/' + thing_id + "/state" + "?_method=PUT")
            //        button.bt.btn.btn-primary(type='submit', name ='state', value="on") ON
            //
            //    form.forma(method='POST' action='/things/' + thing_id + "/state" + "?_method=PUT")
            //        button.bt.btn.btn-primary(type='submit', name ='state', value="off") OFF

            form.forma(method='post', enctype='multipart/form-data', action="/things/" + thing_id + "/colors")

                input(type='file', name='upload', class="custom-file-input", style="color:white; font-family: 'Roboto Condensed', sans-serif;")
                button.color-btn.btn.btn-primary(type='submit') Upload
            if image
                img(src="data:image/jpg;base64," + image)
                each color in colors
                    p(style={background: color})=color

            script.
                function componentToHex(c) {
                    var hex = c.toString(16);
                    return hex.length == 1 ? "0" + hex : hex;
                }

                function rgbToHex(r, g, b) {
                    return componentToHex(r) + componentToHex(g) + componentToHex(b);
                }

                color_picker = document.getElementById("color_picker");
                color_id = document.getElementById("color_id");
                color_picker.onmousedown = select_color;
                color_picker_add();

                function color_picker_add() {
                    color_picker_ = color_picker.getContext("2d"),
                        center_x = (color_picker.width) / 2,
                        center_y = (color_picker.height) / 2,
                        sx = center_x,
                        sy = center_y;
                    palette = new color_picker_element(center_x, center_y, sx, sy);
                    palette.draw();
                }

                function select_color(e) {
                    let x = e.pageX - color_picker.offsetLeft,
                        y = e.pageY - color_picker.offsetTop,
                        pixel = color_picker.getContext("2d").getImageData(x, y, 1, 1).data,
                        pixelColor = "rgb(" + pixel[0] + ", " + pixel[1] + ", " + pixel[2] + ")";
                    s_color.style.backgroundColor = pixelColor;
                    color = rgbToHex(pixel[0], pixel[1], pixel[2]);
                    s_color.value = color;
                }

                function color_picker_element(center_x, center_y, sx, sy) {
                    this.center_x = center_x;
                    this.center_y = center_y;
                    this.sx = sx;
                    this.sy = sy;
                    this.draw = function () {
                        for (var i = 0; i < 360; i += 0.1) {
                            var rad = (i - 45) * (Math.PI) / 180;
                            color_picker_.strokeStyle = "hsla(" + i + ", 100%, 50%, 1.0)";
                            color_picker_.beginPath();
                            color_picker_.moveTo(center_x, center_y);
                            color_picker_.lineTo(center_x + sx * Math.cos(-rad), center_y + sy * Math.sin(-rad));
                            color_picker_.stroke();
                        }
                    }
                }

            style.
                #s_color_picker_id {
                    text-align: center;
                }

                #color_picker{
                    border-radius: 50%;
                    border: solid white 10px;
                    width: 160px;
                    height: 160px;
                }

                .custom-file-input::-webkit-file-upload-button {
                    background-color: transparent;
                    border: solid 2px white;
                    margin-top: 20px;
                    min-height: 30px;
                    font-family: 'Roboto Condensed', sans-serif;
                    font-size: 1em;
                    padding: 4px 29px;
                    color: white;
                }
                #color_id {
                    height: 100px;
                    background-color: #000;
                }

                input[type=checkbox] {
                    height: 0;
                    width: 0;
                    visibility: hidden;
                }

                label {
                    cursor: pointer;
                    text-indent: -9999px;
                    width: 70px;
                    height: 30px;
                    border: solid white 4px;
                    display: block;
                    border-radius: 100px;
                    position: relative;
                }

                label:after {
                    content: '';
                    position: absolute;
                    top: 5px;
                    left: 5px;
                    width: 20px;
                    height: 20px;
                    background: white;
                    border-radius: 90px;
                    transition: 0.3s;
                }


                input:checked + label:after {
                    left: calc(100% - 5px);
                    transform: translateX(-100%);
                }

                label:active:after {
                    width: 50px;
                }
                .colorchange {
                    margin: 4px;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                }
                #timers {
                    display: flex;
                    flex-direction: row;
                }
                .color-btn {
                    background-color: transparent;
                    border: solid 2px white;
                    margin: 14px 0;
                    min-height: 28px;
                    font-family: 'Roboto Condensed', sans-serif;
                    font-size: 1em;
                    padding: 4px 29px;
                    color: white;
                }

                .timer {
                    background-color: transparent;
                    border: solid 2px white;
                    border-radius: 50%;
                    margin: 18px 0;
                    width: 40px;
                    height: 40px;
                    font-family: 'Roboto Condensed', sans-serif;
                    font-size: 1.2em;
                    margin: 5px;
                    color: white;
                }
                #s_color {
                    color: transparent;
                    border: none;
                    width: 45px;
                    height: 45px;
                    border-radius: 50%;
                    border: solid white 4px;
                    margin: 6px;
                }

                body {
                    background: rgb(185, 93, 161);
                    display: flex;
                    justify-content: center;
                    flex-direction: column;
                    align-items: center;
                    background: linear-gradient(0deg, rgba(185, 93, 161, 1) 0%, rgba(211, 51, 51, 1) 100%);
                    margin: 0;
                }


                .forma {
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                }

                .form-group {
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                }

                .in {
                    background-color: white;
                    border: none;
                    margin-top: 7px;
                    min-width: 300px;
                    padding: 15px 10px;
                }

                .moto {
                    width: 100%;
                    text-align: center;
                    font-family: 'Roboto Condensed', sans-serif;
                    color: white;
                    font-size: 13pt;

                }

                before,
                after {
                    background-color: white;
                    content: "";
                    opacity: 70%;
                    display: inline-block;
                    height: 1px;
                    position: relative;
                    vertical-align: middle;
                    width: 80%;
                    color: white;
                }

                .bt {
                    background-color: transparent;
                    border: solid 2px white;
                    margin: 18px 0;
                    min-width: 350px;
                    min-height: 38px;
                    font-family: 'Roboto Condensed', sans-serif;
                    font-size: 1.3em;
                    padding: 4px 29px;
                    color: white;
                }

                .bt:hover {
                    background-color: white;
                    color: #333333;
                    transition: 300ms;
                }

                .timer:hover {
                    background-color: white;
                    color: #333333;
                    transition: 300ms;
                }

                .color-btn:hover {
                    background-color: white;
                    color: #333333;
                    transition: 300ms;
                }

                .container {
                    display: flex;
                    flex-direction: row;
                    align-items: center;
                    min-width: 560px;
                    margin-top: 1em;
                    margin-bottom: 14px;
                }